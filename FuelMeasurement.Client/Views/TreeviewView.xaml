<UserControl x:Class="FuelMeasurement.Client.Views.TreeviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FuelMeasurement.Client.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviours="clr-namespace:FuelMeasurement.Client.Behaviors"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:models="clr-namespace:FuelMeasurement.Client.Models"
             mc:Ignorable="d" 
             Background="Transparent"
             >

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

        <Style TargetType="TreeView" x:Key="TreeViewExplorerPanel">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Opacity="0.0" Color="Transparent"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground"      Value="Black" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>

            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            </Style.Resources>

            <Style.Triggers>

                <Trigger Property="IsMouseDirectlyOver"    Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background"  Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>

                <Trigger Property="IsMouseOver"    Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background"  Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>

                <Trigger Property="IsSelected"     Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background"  Value="White"/>
                    <Setter Property="Foreground"  Value="Black"/>
                    <Setter Property="FontWeight"  Value="Bold"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">

            <Setter Property="FontSize" Value="14"/>

        </Style>

        <DataTemplate x:Key="SensorsLevel">

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="BranchLevel">

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="InsideModelLevel">

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="EmptyTanksLevel">

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </DataTemplate>

        <HierarchicalDataTemplate 
            x:Key="TanksLevel"         
            ItemsSource="{Binding Sensors}"            
            ItemTemplate="{StaticResource SensorsLevel}"         
            >

            <HierarchicalDataTemplate.ItemContainerStyle>

                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>

            </HierarchicalDataTemplate.ItemContainerStyle>

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </HierarchicalDataTemplate>
      
        <HierarchicalDataTemplate 
            x:Key="BranchesLevel"              
            ItemsSource="{Binding FuelTanks}"            
            ItemTemplate="{StaticResource TanksLevel}"                     
            >

            <HierarchicalDataTemplate.ItemContainerStyle>

                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>

            </HierarchicalDataTemplate.ItemContainerStyle>
            
            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate 
            x:Key="ConfigurationsLevel" 
            >

            <HierarchicalDataTemplate.ItemContainerStyle>

                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>

            </HierarchicalDataTemplate.ItemContainerStyle>

            <Expander Header="{Binding Name}"  Style="{StaticResource ExpanderStyle}">

                <StackPanel Orientation="Vertical">

                    <Expander Style="{StaticResource ExpanderStyle}">

                        <Expander.Header>

                            <TextBlock Text="Баки" Style="{StaticResource TextBlockStyle}"/>

                        </Expander.Header>

                        <TreeView
                            Margin="10"
                            x:Name="TanksView" 
                            ItemsSource="{Binding FuelTanks}" 
                            ItemTemplate="{StaticResource EmptyTanksLevel}"
                            Style="{StaticResource TreeViewExplorerPanel}"
                            BorderThickness="0"
                            >

                            <TreeView.ItemContainerStyle>

                                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">

                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>

                                </Style>

                            </TreeView.ItemContainerStyle>

                        </TreeView>

                    </Expander>

                    <Expander Style="{StaticResource ExpanderStyle}">

                        <Expander.Header>

                            <TextBlock Text="Внутренности" Style="{StaticResource TextBlockStyle}"/>

                        </Expander.Header>

                        <TreeView
                            Margin="10"
                            x:Name="InsideModelsView"
                            ItemsSource="{Binding InsideModelFuelTanks}"
                            ItemTemplate="{StaticResource InsideModelLevel}"
                            Style="{StaticResource TreeViewExplorerPanel}"
                            BorderThickness="0"
                            >

                            <TreeView.ItemContainerStyle>

                                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">

                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>

                                </Style>

                            </TreeView.ItemContainerStyle>

                        </TreeView>

                    </Expander>
                    
                    <Expander Style="{StaticResource ExpanderStyle}">

                        <Expander.Header>

                            <TextBlock Text="Ветви" Style="{StaticResource TextBlockStyle}"/>

                        </Expander.Header>

                        <TreeView
                            Margin="10"
                            x:Name="BranchesView"
                            ItemsSource="{Binding Branches}"
                            ItemTemplate="{StaticResource BranchesLevel}"
                            Style="{StaticResource TreeViewExplorerPanel}"
                            BorderThickness="0"
                            >

                            <TreeView.ItemContainerStyle>

                                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">

                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>

                                </Style>

                            </TreeView.ItemContainerStyle>

                        </TreeView>

                    </Expander>

                </StackPanel>

            </Expander>
            
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate 
            x:Key="ProjectsLevel" 
            ItemsSource="{Binding Configurations}"    
            ItemTemplate="{StaticResource ConfigurationsLevel}"   
            >

            <HierarchicalDataTemplate.ItemContainerStyle>

                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>

            </HierarchicalDataTemplate.ItemContainerStyle>

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>

            </StackPanel>

        </HierarchicalDataTemplate>

    </UserControl.Resources>

    <Grid Margin="0 0 0 0">

        <Grid.ColumnDefinitions>

            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>

            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>

        <TreeView
            x:Name="ProjectTreeview" 
            Grid.Row="1" 
            Style="{StaticResource TreeViewExplorerPanel}"
            ItemsSource="{Binding Projects}"
            ItemTemplate="{StaticResource ProjectsLevel}"
            ScrollViewer.CanContentScroll="False"
            >

            <TreeView.ItemContainerStyle>

                <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">

                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>

                </Style>

            </TreeView.ItemContainerStyle>

            <i:Interaction.Behaviors>
                
                <behaviours:BindableSelectedItemBehavior 
                    SelectedItem="{Binding SelectedItem, 
                    Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged}" 
                    />
                
            </i:Interaction.Behaviors>

        </TreeView>

    </Grid>
    
</UserControl>
